tidy_ubs
library(alr4)
library(tidyverse)
library(ggplot2)
UBSprices <- as.data.frame(UBSprices)
head(UBSprices)
tidy_ubs <- UBSprices[,c(3,6)]
tidy_ubs2 <- gather(data = tidy_ubs, key = year, value = price, rice2003, rice2009)
head(tidy_ubs2)
tidy_ubs2$year <- parse_number(tidy_ubs2$year)
tidy_ubs2$year  <- as.factor(tidy_ubs2$year)
ggplot(data=tidy_ubs2,aes(x=year, y=price)) +
geom_boxplot()
tidy_ubs
tidy_ubs$diff <- tidy_ubs$rice2009 - tidy_ubs$rice2003
increase_rice <- tidy_ubs[tidy_ubs$diff>0,]
increase_rice$countries <- as.factor(rownames(increase_rice))
ggplot(data=increase_rice,aes(x=diff,y=countries)) +
geom_col()
increase_rice$countries <- fct_reorder(increase_rice$countries, increase_rice$diff)
ggplot(data=increase_rice,aes(x=diff,y=countries)) +
geom_col()
decrease_rice <- tidy_ubs[tidy_ubs$diff<0,]
decrease_rice$countries <- as.factor(rownames(decrease_rice))
ggplot(data=decrease_rice,aes(x=diff,y=countries)) +
geom_col()
decrease_rice$countries <- fct_reorder(decrease_rice$countries, decrease_rice$diff)
ggplot(data=decrease_rice,aes(x=diff,y=countries)) +
geom_col()
library(nycflights13)
flights <- flights
str(flights)
#1 Select all flights in November
nov_flights = flights %>%
filter(month == 11)
#2 select all flights on 28th of November
nov28 <- flights %>%
filter(month == 11, day == 28)
#3 Select from the previous condition, only the columns (flight, origin, distance, air_time)
nov28_4 = nov28 %>%
select(flight, origin, distance, air_time)
#4 Create a new column with the speed of the slight using the question 3
nov28_with_speed = nov28_4 %>%
mutate(speed = distance / air_time * 60)
#5. Create a summary of the average speed of all dataset
nov28_with_speed %>%
summarize(avg_speed = mean(speed,na.rm=TRUE))
#6. Create the same summary of flight from different origins
nov28_with_speed %>%
group_by(origin) %>%
summarize(mean_dist = mean(distance))
delays <- flights %>%
group_by(dest) %>%
summarise(
count = n(),
dist = mean(distance, na.rm = TRUE),
delay = mean(arr_delay, na.rm = TRUE)
) %>%
filter(count > 20, dest != "HNL")
library(ggplot2)
ggplot(data = delays, mapping = aes(x = dist, y = delay)) +
geom_point(aes(size = count), alpha = 1/3) +
geom_smooth(se = FALSE)
BiocManager::install("parathyroidSE")
library(parathyroidSE)
data(parathyroidGenesSE)
countmatrix <- as.data.frame(parathyroidGenesSE@assays$data$counts)
sample <- as.data.frame(parathyroidGenesSE@colData)
genesname <- as.data.frame(rownames(parathyroidGenesSE))
View(genesname)
BiocManager::install("EnsDb.Hsapiens.v86")
library(EnsDb.Hsapiens.v86)
library(biomaRt)
ls('package:EnsDb.Hsapiens.v86')
ls('package:EnsDb.Hsapiens.v86')
EnsDb.Hsapiens.v86
EnsDb.Hsapiens.v86 <- EnsDb.Hsapiens.v86
View(EnsDb.Hsapiens.v86)
EnsDb.Hsapiens.v86@tables[["entrezgene"]]
EnsDb.Hsapiens.v86@tables
EnsDb.Hsapiens.v86
gene_id <- getBM(attributes = c("ensembl_gene_id","external_gene_name","entrezgene_id"),
mart = useDataset("mmusculus_gene_ensembl", useMart("ensembl")))
View(gene_id)
ensembl <- useEnsembl(biomart = "genes", dataset = "hsapiens_gene_ensembl")
View(ensembl)
ensembl@filters
listEnsembl()
ensembl <- useEnsembl(biomart = "genes")
View(ensembl)
ensembl <- useDataset(dataset = "hsapiens_gene_ensembl", mart = ensembl)
View(ensembl)
Uniprot <- read.csv("http://ftp.ensembl.org/pub/release-104/tsv/homo_sapiens/Homo_sapiens.GRCh38.104.uniprot.tsv.gz")
#BiocManager::install("Biomart")
library(biomaRt)
mart <- useDataset("hsapiens_gene_ensembl", useMart("ensembl"))
genes <-  gene_id
genes <-  genesname
gene_IDs <- getBM(filters= "ensembl_gene_id",
attributes= c("ensembl_gene_id","hgnc_symbol"),
values = genes, mart= mart)
View(gene_IDs)
listAttributes
listAttributes
listAttributes（）
listAttributes()
listAttributes(getBM)
getBMlist()
getBM()
mapping <- getBM(attributes = listAttributes(ensembl), mart = ensembl)
x <- listAttributes(ensembl)
View(x)
View(x)
gene_IDs <- getBM(filters= "ensembl_gene_id",
attributes= c("ensembl_gene_id","hgnc_symbol","external_gene_name","description"),
values = genes, mart= mart)
View(genes)
View(gene_IDs)
colname(genes)
colnames(genes)
left_join(genes, gene_IDs, by = c("rownames(parathyroidGenesSE)"="ensembl_gene_id"))
Summary <- left_join(genes, gene_IDs, by = c("rownames(parathyroidGenesSE)"="ensembl_gene_id"))
View(Summary)
pow <- function(x, y) {
# function to print x raised to the power y
result <- x^y
print(paste(x,"raised to the power", y, "is", result))
}
pow(2,5)
pow <- function(x, y) {
# function to print x raised to the power y
result <- x^y
print(paste(x,"raised to the power", y, "is", result))
}
pow(2,5)
pow(x = 8, y = 2)
#With default value
pow <- function(x, y = 2) {
# function to print x raised to the power y
result <- x^y
print(paste(x,"raised to the power", y, "is", result))
}
pow(5)
head(tidy_ubs2)
parse_number(tidy_ubs2$year)
tidy_ubs2 <- gather(data = tidy_ubs, key = year, value = price, rice2003, rice2009)
library(alr4)
library(tidyverse)
library(ggplot2)
UBSprices <- as.data.frame(UBSprices)
head(UBSprices)
tidy_ubs <- UBSprices[,c(3,6)]
tidy_ubs2 <- gather(data = tidy_ubs, key = year, value = price, rice2003, rice2009)
head(tidy_ubs2)
tidy_ubs2$year <- parse_number(tidy_ubs2$year)
tidy_ubs2$year  <- as.factor(tidy_ubs2$year)
ggplot(data=tidy_ubs2,aes(x=year, y=price)) +
geom_boxplot()
parse_number(tidy_ubs2$year)
tidy_ubs2 <- gather(data = tidy_ubs, key = year, value = price, rice2003, rice2009)
head(tidy_ubs2)
tidy_ubs2
pow <- function(x, y) {
# function to print x raised to the power y
result <- x^y
print(paste(x,"raised to the power", y, "is", result))
}
pow(2,5)
pow(x = 8, y = 2)
#With default value
pow <- function(x, y = 2) {
# function to print x raised to the power y
result <- x^y
print(paste(x,"raised to the power", y, "is", result))
}
pow(5)
#Can you write a function to add, subtract and multiple? Can you also make the function to print the results out?
